version: "3"
services: 
  app:
    build: ./app/
    depends_on:
      - database
    env_file:
      - ./app/.env
    volumes:
      - ./app:/app
    healthcheck:
      test: ["CMD", "python", "-c", "import urllib.request; urllib.request.urlopen('http://localhost:8080/health')"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 20s
    networks:
      - toxic-network
  web-proxy:
    image: nginx
    depends_on:
      app:
        condition: service_healthy
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
    ports:
      - "80:80"
      - "443:443"
    networks:
      - toxic-network
  rabbitmq:
    image: rabbitmq:management
    ports:
      - "15672:15672"
      - "5672:5672"
    volumes:
      - rabbitmq_volume:/var/lib/rabbitmq
    restart: on-failure
    env_file:
      - ./app/.env
    networks:
      - toxic-network
  database:
    image: postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_volume:/var/lib/postgresql
    env_file:
      - ./app/.env
    networks:
      - toxic-network

volumes:
  postgres_volume:
  rabbitmq_volume:

networks:
  toxic-network:
    name: toxic-network
    driver: bridge
